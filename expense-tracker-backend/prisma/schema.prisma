generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id               Int              @id @default(autoincrement())
  firstname        String
  lastname         String
  email            String           @unique
  password         String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  expenses         Expense[]
  incomes          Income[]
  incomeCategories IncomeCategory[]

  @@map("users")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  expenses    Expense[]

  @@map("categories")
}

model Expense {
  id         Int      @id @default(autoincrement())
  amount     Float
  note       String?
  date       DateTime @default(now())
  userId     Int
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("expenses")
}

model IncomeCategory {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  income    Income[]
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("income_categories")
}

model Income {
  id         Int            @id @default(autoincrement())
  amount     Float
  note       String?
  date       DateTime       @default(now())
  userId     Int
  categoryId Int
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  category   IncomeCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user       User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("income")
}
